/**
 * Weaviate API
 * Lets you register, view and manage cloud ready devices.
 *
 * OpenAPI spec version: v1-alpha
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Adapter', 'model/AdaptersAcceptResponse', 'model/AdaptersActivateResponse', 'model/AdaptersDeactivateResponse', 'model/AdaptersListResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Adapter'), require('../model/AdaptersAcceptResponse'), require('../model/AdaptersActivateResponse'), require('../model/AdaptersDeactivateResponse'), require('../model/AdaptersListResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.WeaviateApi) {
      root.WeaviateApi = {};
    }
    root.WeaviateApi.AdaptersApi = factory(root.WeaviateApi.ApiClient, root.WeaviateApi.Adapter, root.WeaviateApi.AdaptersAcceptResponse, root.WeaviateApi.AdaptersActivateResponse, root.WeaviateApi.AdaptersDeactivateResponse, root.WeaviateApi.AdaptersListResponse);
  }
}(this, function(ApiClient, Adapter, AdaptersAcceptResponse, AdaptersActivateResponse, AdaptersDeactivateResponse, AdaptersListResponse) {
  'use strict';

  /**
   * Adapters service.
   * @module api/AdaptersApi
   * @version v1-alpha
   */

  /**
   * Constructs a new AdaptersApi. 
   * @alias module:api/AdaptersApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the weaveAdaptersAccept operation.
     * @callback module:api/AdaptersApi~weaveAdaptersAcceptCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdaptersAcceptResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used by an adapter provider to accept an activation and prevent it from expiring.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.alt Data format for the response. (default to json)
     * @param {String} opts.fields Selector specifying which fields to include in a partial response.
     * @param {String} opts.key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} opts.oauthToken OAuth 2.0 token for the current user.
     * @param {Boolean} opts.prettyPrint Returns response with indentations and line breaks. (default to true)
     * @param {String} opts.quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
     * @param {String} opts.userIp IP address of the site where the request originates. Use this if you want to enforce per-user limits.
     * @param {String} opts.activationId The ID of the activation to accept. This represents a Weave user.
     * @param {module:api/AdaptersApi~weaveAdaptersAcceptCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdaptersAcceptResponse}
     */
    this.weaveAdaptersAccept = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'activationId': opts['activationId']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = ['application/json', 'application/protobuf', 'application/xml'];
      var accepts = ['application/json', 'application/protobuf', 'application/xml'];
      var returnType = AdaptersAcceptResponse;

      return this.apiClient.callApi(
        '/adapters/accept', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the weaveAdaptersActivate operation.
     * @callback module:api/AdaptersApi~weaveAdaptersActivateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdaptersActivateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Activates an adapter. The activation will be contingent upon the adapter provider accepting the activation. If the activation is not accepted within 15 minutes, the activation will be deleted.
     * @param {String} adapterId The ID of the adapter to activate.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.alt Data format for the response. (default to json)
     * @param {String} opts.fields Selector specifying which fields to include in a partial response.
     * @param {String} opts.key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} opts.oauthToken OAuth 2.0 token for the current user.
     * @param {Boolean} opts.prettyPrint Returns response with indentations and line breaks. (default to true)
     * @param {String} opts.quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
     * @param {String} opts.userIp IP address of the site where the request originates. Use this if you want to enforce per-user limits.
     * @param {module:api/AdaptersApi~weaveAdaptersActivateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdaptersActivateResponse}
     */
    this.weaveAdaptersActivate = function(adapterId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'adapterId' is set
      if (adapterId == undefined || adapterId == null) {
        throw new Error("Missing the required parameter 'adapterId' when calling weaveAdaptersActivate");
      }


      var pathParams = {
        'adapterId': adapterId
      };
      var queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/protobuf', 'application/xml'];
      var accepts = ['application/json', 'application/protobuf', 'application/xml'];
      var returnType = AdaptersActivateResponse;

      return this.apiClient.callApi(
        '/adapters/{adapterId}/activate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the weaveAdaptersDeactivate operation.
     * @callback module:api/AdaptersApi~weaveAdaptersDeactivateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdaptersDeactivateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deactivates an adapter. This will also delete all devices provided by that adapter.
     * @param {String} adapterId The ID of the adapter to deactivate.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.alt Data format for the response. (default to json)
     * @param {String} opts.fields Selector specifying which fields to include in a partial response.
     * @param {String} opts.key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} opts.oauthToken OAuth 2.0 token for the current user.
     * @param {Boolean} opts.prettyPrint Returns response with indentations and line breaks. (default to true)
     * @param {String} opts.quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
     * @param {String} opts.userIp IP address of the site where the request originates. Use this if you want to enforce per-user limits.
     * @param {module:api/AdaptersApi~weaveAdaptersDeactivateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdaptersDeactivateResponse}
     */
    this.weaveAdaptersDeactivate = function(adapterId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'adapterId' is set
      if (adapterId == undefined || adapterId == null) {
        throw new Error("Missing the required parameter 'adapterId' when calling weaveAdaptersDeactivate");
      }


      var pathParams = {
        'adapterId': adapterId
      };
      var queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/protobuf', 'application/xml'];
      var accepts = ['application/json', 'application/protobuf', 'application/xml'];
      var returnType = AdaptersDeactivateResponse;

      return this.apiClient.callApi(
        '/adapters/{adapterId}/deactivate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the weaveAdaptersGet operation.
     * @callback module:api/AdaptersApi~weaveAdaptersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Adapter} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an adapter.
     * @param {String} adapterId Unique ID of the adapter.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.alt Data format for the response. (default to json)
     * @param {String} opts.fields Selector specifying which fields to include in a partial response.
     * @param {String} opts.key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} opts.oauthToken OAuth 2.0 token for the current user.
     * @param {Boolean} opts.prettyPrint Returns response with indentations and line breaks. (default to true)
     * @param {String} opts.quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
     * @param {String} opts.userIp IP address of the site where the request originates. Use this if you want to enforce per-user limits.
     * @param {module:api/AdaptersApi~weaveAdaptersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Adapter}
     */
    this.weaveAdaptersGet = function(adapterId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'adapterId' is set
      if (adapterId == undefined || adapterId == null) {
        throw new Error("Missing the required parameter 'adapterId' when calling weaveAdaptersGet");
      }


      var pathParams = {
        'adapterId': adapterId
      };
      var queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/protobuf', 'application/xml'];
      var accepts = ['application/json', 'application/protobuf', 'application/xml'];
      var returnType = Adapter;

      return this.apiClient.callApi(
        '/adapters/{adapterId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the weaveAdaptersList operation.
     * @callback module:api/AdaptersApi~weaveAdaptersListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdaptersListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists adapters.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.alt Data format for the response. (default to json)
     * @param {String} opts.fields Selector specifying which fields to include in a partial response.
     * @param {String} opts.key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} opts.oauthToken OAuth 2.0 token for the current user.
     * @param {Boolean} opts.prettyPrint Returns response with indentations and line breaks. (default to true)
     * @param {String} opts.quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
     * @param {String} opts.userIp IP address of the site where the request originates. Use this if you want to enforce per-user limits.
     * @param {module:api/AdaptersApi~weaveAdaptersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdaptersListResponse}
     */
    this.weaveAdaptersList = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/protobuf', 'application/xml'];
      var accepts = ['application/json', 'application/protobuf', 'application/xml'];
      var returnType = AdaptersListResponse;

      return this.apiClient.callApi(
        '/adapters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
