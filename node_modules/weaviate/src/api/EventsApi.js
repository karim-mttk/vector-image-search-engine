/**
 * Weaviate API
 * Lets you register, view and manage cloud ready devices.
 *
 * OpenAPI spec version: v1-alpha
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EventsDeleteAllRequest', 'model/EventsListResponse', 'model/EventsRecordDeviceEventsRequest'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/EventsDeleteAllRequest'), require('../model/EventsListResponse'), require('../model/EventsRecordDeviceEventsRequest'));
  } else {
    // Browser globals (root is window)
    if (!root.WeaviateApi) {
      root.WeaviateApi = {};
    }
    root.WeaviateApi.EventsApi = factory(root.WeaviateApi.ApiClient, root.WeaviateApi.EventsDeleteAllRequest, root.WeaviateApi.EventsListResponse, root.WeaviateApi.EventsRecordDeviceEventsRequest);
  }
}(this, function(ApiClient, EventsDeleteAllRequest, EventsListResponse, EventsRecordDeviceEventsRequest) {
  'use strict';

  /**
   * Events service.
   * @module api/EventsApi
   * @version v1-alpha
   */

  /**
   * Constructs a new EventsApi. 
   * @alias module:api/EventsApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the weaveEventsDeleteAll operation.
     * @callback module:api/EventsApi~weaveEventsDeleteAllCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes all events associated with a particular device. Leaves an event to indicate deletion happened.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.alt Data format for the response. (default to json)
     * @param {String} opts.fields Selector specifying which fields to include in a partial response.
     * @param {String} opts.key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} opts.oauthToken OAuth 2.0 token for the current user.
     * @param {Boolean} opts.prettyPrint Returns response with indentations and line breaks. (default to true)
     * @param {String} opts.quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
     * @param {String} opts.userIp IP address of the site where the request originates. Use this if you want to enforce per-user limits.
     * @param {String} opts.hl Specifies the language code that should be used for text values in the API response.
     * @param {module:model/EventsDeleteAllRequest} opts.body 
     * @param {module:api/EventsApi~weaveEventsDeleteAllCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.weaveEventsDeleteAll = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'hl': opts['hl']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/protobuf', 'application/xml'];
      var accepts = ['application/json', 'application/protobuf', 'application/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/events/deleteAll', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the weaveEventsList operation.
     * @callback module:api/EventsApi~weaveEventsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EventsListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists events.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.alt Data format for the response. (default to json)
     * @param {String} opts.fields Selector specifying which fields to include in a partial response.
     * @param {String} opts.key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} opts.oauthToken OAuth 2.0 token for the current user.
     * @param {Boolean} opts.prettyPrint Returns response with indentations and line breaks. (default to true)
     * @param {String} opts.quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
     * @param {String} opts.userIp IP address of the site where the request originates. Use this if you want to enforce per-user limits.
     * @param {Array.<String>} opts.commandId Affected command id.
     * @param {Array.<String>} opts.deviceId Sending or affected device id.
     * @param {String} opts.endTimeMs End of time range in ms since epoch.
     * @param {String} opts.hl Specifies the language code that should be used for text values in the API response.
     * @param {Number} opts.maxResults 
     * @param {Number} opts.startIndex 
     * @param {String} opts.startTimeMs Start of time range in ms since epoch.
     * @param {String} opts.token 
     * @param {module:model/String} opts.type Event type.
     * @param {module:api/EventsApi~weaveEventsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EventsListResponse}
     */
    this.weaveEventsList = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'commandId': this.apiClient.buildCollectionParam(opts['commandId'], 'multi'),
        'deviceId': this.apiClient.buildCollectionParam(opts['deviceId'], 'multi'),
        'endTimeMs': opts['endTimeMs'],
        'hl': opts['hl'],
        'maxResults': opts['maxResults'],
        'startIndex': opts['startIndex'],
        'startTimeMs': opts['startTimeMs'],
        'token': opts['token'],
        'type': opts['type']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = ['application/json', 'application/protobuf', 'application/xml'];
      var accepts = ['application/json', 'application/protobuf', 'application/xml'];
      var returnType = EventsListResponse;

      return this.apiClient.callApi(
        '/events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the weaveEventsRecordDeviceEvents operation.
     * @callback module:api/EventsApi~weaveEventsRecordDeviceEventsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enables or disables recording of a particular device&#39;s events based on a boolean parameter. Enabled by default.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.alt Data format for the response. (default to json)
     * @param {String} opts.fields Selector specifying which fields to include in a partial response.
     * @param {String} opts.key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} opts.oauthToken OAuth 2.0 token for the current user.
     * @param {Boolean} opts.prettyPrint Returns response with indentations and line breaks. (default to true)
     * @param {String} opts.quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
     * @param {String} opts.userIp IP address of the site where the request originates. Use this if you want to enforce per-user limits.
     * @param {String} opts.hl Specifies the language code that should be used for text values in the API response.
     * @param {module:model/EventsRecordDeviceEventsRequest} opts.body 
     * @param {module:api/EventsApi~weaveEventsRecordDeviceEventsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.weaveEventsRecordDeviceEvents = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'hl': opts['hl']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = ['application/json', 'application/protobuf', 'application/xml'];
      var accepts = ['application/json', 'application/protobuf', 'application/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/events/recordDeviceEvents', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
