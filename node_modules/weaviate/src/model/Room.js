/**
 * Weaviate API
 * Lets you register, view and manage cloud ready devices.
 *
 * OpenAPI spec version: v1-alpha
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AssociatedLabel'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AssociatedLabel'));
  } else {
    // Browser globals (root is window)
    if (!root.WeaviateApi) {
      root.WeaviateApi = {};
    }
    root.WeaviateApi.Room = factory(root.WeaviateApi.ApiClient, root.WeaviateApi.AssociatedLabel);
  }
}(this, function(ApiClient, AssociatedLabel) {
  'use strict';




  /**
   * The Room model module.
   * @module model/Room
   * @version v1-alpha
   */

  /**
   * Constructs a new <code>Room</code>.
   * @alias module:model/Room
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>Room</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Room} obj Optional instance to populate.
   * @return {module:model/Room} The populated <code>Room</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('associatedLabel')) {
        obj['associatedLabel'] = ApiClient.convertToType(data['associatedLabel'], [AssociatedLabel]);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('placeId')) {
        obj['placeId'] = ApiClient.convertToType(data['placeId'], 'String');
      }
      if (data.hasOwnProperty('roomType')) {
        obj['roomType'] = ApiClient.convertToType(data['roomType'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {Array.<module:model/AssociatedLabel>} associatedLabel
   */
  exports.prototype['associatedLabel'] = undefined;
  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} placeId
   */
  exports.prototype['placeId'] = undefined;
  /**
   * @member {module:model/Room.RoomTypeEnum} roomType
   */
  exports.prototype['roomType'] = undefined;


  /**
   * Allowed values for the <code>roomType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RoomTypeEnum = {
    /**
     * value: "attic"
     * @const
     */
    "attic": "attic",
    /**
     * value: "backyard"
     * @const
     */
    "backyard": "backyard",
    /**
     * value: "basement"
     * @const
     */
    "basement": "basement",
    /**
     * value: "bathroom"
     * @const
     */
    "bathroom": "bathroom",
    /**
     * value: "bedroom"
     * @const
     */
    "bedroom": "bedroom",
    /**
     * value: "default"
     * @const
     */
    "default": "default",
    /**
     * value: "den"
     * @const
     */
    "den": "den",
    /**
     * value: "diningRoom"
     * @const
     */
    "diningRoom": "diningRoom",
    /**
     * value: "entryway"
     * @const
     */
    "entryway": "entryway",
    /**
     * value: "familyRoom"
     * @const
     */
    "familyRoom": "familyRoom",
    /**
     * value: "frontyard"
     * @const
     */
    "frontyard": "frontyard",
    /**
     * value: "garage"
     * @const
     */
    "garage": "garage",
    /**
     * value: "hallway"
     * @const
     */
    "hallway": "hallway",
    /**
     * value: "kitchen"
     * @const
     */
    "kitchen": "kitchen",
    /**
     * value: "livingRoom"
     * @const
     */
    "livingRoom": "livingRoom",
    /**
     * value: "masterBedroom"
     * @const
     */
    "masterBedroom": "masterBedroom",
    /**
     * value: "office"
     * @const
     */
    "office": "office",
    /**
     * value: "other"
     * @const
     */
    "other": "other",
    /**
     * value: "shed"
     * @const
     */
    "shed": "shed",
    /**
     * value: "unknownRoomType"
     * @const
     */
    "unknownRoomType": "unknownRoomType"  };


  return exports;
}));


