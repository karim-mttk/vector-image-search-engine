/**
 * Weaviate API
 * Lets you register, view and manage cloud ready devices.
 *
 * OpenAPI spec version: v1-alpha
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.WeaviateApi) {
      root.WeaviateApi = {};
    }
    root.WeaviateApi.Adapter = factory(root.WeaviateApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Adapter model module.
   * @module model/Adapter
   * @version v1-alpha
   */

  /**
   * Constructs a new <code>Adapter</code>.
   * @alias module:model/Adapter
   * @class
   */
  var exports = function() {
    var _this = this;








  };

  /**
   * Constructs a <code>Adapter</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Adapter} obj Optional instance to populate.
   * @return {module:model/Adapter} The populated <code>Adapter</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('activateUrl')) {
        obj['activateUrl'] = ApiClient.convertToType(data['activateUrl'], 'String');
      }
      if (data.hasOwnProperty('activated')) {
        obj['activated'] = ApiClient.convertToType(data['activated'], 'Boolean');
      }
      if (data.hasOwnProperty('deactivateUrl')) {
        obj['deactivateUrl'] = ApiClient.convertToType(data['deactivateUrl'], 'String');
      }
      if (data.hasOwnProperty('displayName')) {
        obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
      }
      if (data.hasOwnProperty('iconUrl')) {
        obj['iconUrl'] = ApiClient.convertToType(data['iconUrl'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('manageUrl')) {
        obj['manageUrl'] = ApiClient.convertToType(data['manageUrl'], 'String');
      }
    }
    return obj;
  }

  /**
   * URL to adapter web flow to activate the adapter. Deprecated, use the activationUrl returned in the response of the Adapters.activate API.
   * @member {String} activateUrl
   */
  exports.prototype['activateUrl'] = undefined;
  /**
   * Whether this adapter has been activated for the current user.
   * @member {Boolean} activated
   */
  exports.prototype['activated'] = undefined;
  /**
   * URL to adapter web flow to disconnect the adapter. Deprecated, the adapter will be notified via pubsub.
   * @member {String} deactivateUrl
   */
  exports.prototype['deactivateUrl'] = undefined;
  /**
   * Display name of the adapter.
   * @member {String} displayName
   */
  exports.prototype['displayName'] = undefined;
  /**
   * URL to an icon that represents the adapter.
   * @member {String} iconUrl
   */
  exports.prototype['iconUrl'] = undefined;
  /**
   * ID of the adapter.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * URL to adapter web flow to connect new devices. Only used for adapters that cannot automatically detect new devices. This field is returned only if the user has already activated the adapter.
   * @member {String} manageUrl
   */
  exports.prototype['manageUrl'] = undefined;



  return exports;
}));


