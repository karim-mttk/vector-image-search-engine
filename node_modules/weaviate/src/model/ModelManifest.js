/**
 * Weaviate API
 * Lets you register, view and manage cloud ready devices.
 *
 * OpenAPI spec version: v1-alpha
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Application'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Application'));
  } else {
    // Browser globals (root is window)
    if (!root.WeaviateApi) {
      root.WeaviateApi = {};
    }
    root.WeaviateApi.ModelManifest = factory(root.WeaviateApi.ApiClient, root.WeaviateApi.Application);
  }
}(this, function(ApiClient, Application) {
  'use strict';




  /**
   * The ModelManifest model module.
   * @module model/ModelManifest
   * @version v1-alpha
   */

  /**
   * Constructs a new <code>ModelManifest</code>.
   * Model manifest info.
   * @alias module:model/ModelManifest
   * @class
   */
  var exports = function() {
    var _this = this;












  };

  /**
   * Constructs a <code>ModelManifest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ModelManifest} obj Optional instance to populate.
   * @return {module:model/ModelManifest} The populated <code>ModelManifest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('allowedChildModelManifestIds')) {
        obj['allowedChildModelManifestIds'] = ApiClient.convertToType(data['allowedChildModelManifestIds'], ['String']);
      }
      if (data.hasOwnProperty('applications')) {
        obj['applications'] = ApiClient.convertToType(data['applications'], [Application]);
      }
      if (data.hasOwnProperty('confirmationImageUrl')) {
        obj['confirmationImageUrl'] = ApiClient.convertToType(data['confirmationImageUrl'], 'String');
      }
      if (data.hasOwnProperty('deviceImageUrl')) {
        obj['deviceImageUrl'] = ApiClient.convertToType(data['deviceImageUrl'], 'String');
      }
      if (data.hasOwnProperty('deviceKind')) {
        obj['deviceKind'] = ApiClient.convertToType(data['deviceKind'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('kind')) {
        obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
      }
      if (data.hasOwnProperty('modelDescription')) {
        obj['modelDescription'] = ApiClient.convertToType(data['modelDescription'], 'String');
      }
      if (data.hasOwnProperty('modelName')) {
        obj['modelName'] = ApiClient.convertToType(data['modelName'], 'String');
      }
      if (data.hasOwnProperty('oemName')) {
        obj['oemName'] = ApiClient.convertToType(data['oemName'], 'String');
      }
      if (data.hasOwnProperty('supportPageUrl')) {
        obj['supportPageUrl'] = ApiClient.convertToType(data['supportPageUrl'], 'String');
      }
    }
    return obj;
  }

  /**
   * For gateways, a list of device ids that are allowed to connect to it.
   * @member {Array.<String>} allowedChildModelManifestIds
   */
  exports.prototype['allowedChildModelManifestIds'] = undefined;
  /**
   * List of applications recommended to use with a device model.
   * @member {Array.<module:model/Application>} applications
   */
  exports.prototype['applications'] = undefined;
  /**
   * URL of image showing a confirmation button.
   * @member {String} confirmationImageUrl
   */
  exports.prototype['confirmationImageUrl'] = undefined;
  /**
   * URL of device image.
   * @member {String} deviceImageUrl
   */
  exports.prototype['deviceImageUrl'] = undefined;
  /**
   * Device kind, see \"deviceKind\" field of the Device resource. See list of device kinds values.
   * @member {String} deviceKind
   */
  exports.prototype['deviceKind'] = undefined;
  /**
   * Unique model manifest ID.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Identifies what kind of resource this is. Value: the fixed string \"weave#modelManifest\".
   * @member {String} kind
   * @default 'weave#modelManifest'
   */
  exports.prototype['kind'] = 'weave#modelManifest';
  /**
   * User readable device model description.
   * @member {String} modelDescription
   */
  exports.prototype['modelDescription'] = undefined;
  /**
   * User readable device model name.
   * @member {String} modelName
   */
  exports.prototype['modelName'] = undefined;
  /**
   * User readable name of device model manufacturer.
   * @member {String} oemName
   */
  exports.prototype['oemName'] = undefined;
  /**
   * URL of device support page.
   * @member {String} supportPageUrl
   */
  exports.prototype['supportPageUrl'] = undefined;



  return exports;
}));


