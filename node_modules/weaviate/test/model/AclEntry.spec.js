/**
 * Weaviate API
 * Lets you register, view and manage cloud ready devices.
 *
 * OpenAPI spec version: v1-alpha
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WeaviateApi);
  }
}(this, function(expect, WeaviateApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WeaviateApi.AclEntry();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AclEntry', function() {
    it('should create an instance of AclEntry', function() {
      // uncomment below and update the code to test AclEntry
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be.a(WeaviateApi.AclEntry);
    });

    it('should have the property cloudAccessRevoked (base name: "cloudAccessRevoked")', function() {
      // uncomment below and update the code to test the property cloudAccessRevoked
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property creatorEmail (base name: "creatorEmail")', function() {
      // uncomment below and update the code to test the property creatorEmail
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property delegator (base name: "delegator")', function() {
      // uncomment below and update the code to test the property delegator
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property key (base name: "key")', function() {
      // uncomment below and update the code to test the property key
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property localAccessInfo (base name: "localAccessInfo")', function() {
      // uncomment below and update the code to test the property localAccessInfo
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property pending (base name: "pending")', function() {
      // uncomment below and update the code to test the property pending
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property privileges (base name: "privileges")', function() {
      // uncomment below and update the code to test the property privileges
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property revocationTimeMs (base name: "revocationTimeMs")', function() {
      // uncomment below and update the code to test the property revocationTimeMs
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property role (base name: "role")', function() {
      // uncomment below and update the code to test the property role
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property scopeId (base name: "scopeId")', function() {
      // uncomment below and update the code to test the property scopeId
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property scopeMembership (base name: "scopeMembership")', function() {
      // uncomment below and update the code to test the property scopeMembership
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property scopeName (base name: "scopeName")', function() {
      // uncomment below and update the code to test the property scopeName
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property scopePhotoUrl (base name: "scopePhotoUrl")', function() {
      // uncomment below and update the code to test the property scopePhotoUrl
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

    it('should have the property scopeType (base name: "scopeType")', function() {
      // uncomment below and update the code to test the property scopeType
      //var instane = new WeaviateApi.AclEntry();
      //expect(instance).to.be();
    });

  });

}));
