/**
 * Weaviate API
 * Lets you register, view and manage cloud ready devices.
 *
 * OpenAPI spec version: v1-alpha
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WeaviateApi);
  }
}(this, function(expect, WeaviateApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WeaviateApi.CommandsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CommandsApi', function() {
    describe('weaveCommandsCancel', function() {
      it('should call weaveCommandsCancel successfully', function(done) {
        //uncomment below and update the code to test weaveCommandsCancel
        //instance.weaveCommandsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('weaveCommandsDelete', function() {
      it('should call weaveCommandsDelete successfully', function(done) {
        //uncomment below and update the code to test weaveCommandsDelete
        //instance.weaveCommandsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('weaveCommandsGet', function() {
      it('should call weaveCommandsGet successfully', function(done) {
        //uncomment below and update the code to test weaveCommandsGet
        //instance.weaveCommandsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('weaveCommandsGetQueue', function() {
      it('should call weaveCommandsGetQueue successfully', function(done) {
        //uncomment below and update the code to test weaveCommandsGetQueue
        //instance.weaveCommandsGetQueue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('weaveCommandsInsert', function() {
      it('should call weaveCommandsInsert successfully', function(done) {
        //uncomment below and update the code to test weaveCommandsInsert
        //instance.weaveCommandsInsert(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('weaveCommandsList', function() {
      it('should call weaveCommandsList successfully', function(done) {
        //uncomment below and update the code to test weaveCommandsList
        //instance.weaveCommandsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('weaveCommandsPatch', function() {
      it('should call weaveCommandsPatch successfully', function(done) {
        //uncomment below and update the code to test weaveCommandsPatch
        //instance.weaveCommandsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('weaveCommandsUpdate', function() {
      it('should call weaveCommandsUpdate successfully', function(done) {
        //uncomment below and update the code to test weaveCommandsUpdate
        //instance.weaveCommandsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
